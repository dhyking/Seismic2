package com.dhy.seismic2.daos.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.dhy.seismic2.daos.bean.BiaoZhuModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "BIAOZHUDIAN".
*/
public class BiaoZhuModelDao extends AbstractDao<BiaoZhuModel, String> {

    public static final String TABLENAME = "BIAOZHUDIAN";

    /**
     * Properties of entity BiaoZhuModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, String.class, "ID", true, "ID");
        public final static Property Name = new Property(1, String.class, "Name", false, "NAME");
        public final static Property Longitude = new Property(2, double.class, "Longitude", false, "LONGITUDE");
        public final static Property Latitude = new Property(3, double.class, "Latitude", false, "LATITUDE");
        public final static Property Des = new Property(4, String.class, "Des", false, "DES");
        public final static Property PicAddress = new Property(5, String.class, "PicAddress", false, "PIC_ADDRESS");
        public final static Property VideoAddress = new Property(6, String.class, "VideoAddress", false, "VIDEO_ADDRESS");
        public final static Property AudioAddress = new Property(7, String.class, "AudioAddress", false, "AUDIO_ADDRESS");
        public final static Property BZMType = new Property(8, String.class, "BZMType", false, "BZMTYPE");
        public final static Property CreatorId = new Property(9, String.class, "CreatorId", false, "CREATOR_ID");
        public final static Property EventHeadId = new Property(10, String.class, "EventHeadId", false, "EVENT_HEAD_ID");
        public final static Property CreatorName = new Property(11, String.class, "CreatorName", false, "CREATOR_NAME");
        public final static Property CreateTime = new Property(12, String.class, "CreateTime", false, "CREATE_TIME");
        public final static Property MissionCase = new Property(13, String.class, "MissionCase", false, "MISSION_CASE");
        public final static Property IsUpload = new Property(14, int.class, "IsUpload", false, "IS_UPLOAD");
    }


    public BiaoZhuModelDao(DaoConfig config) {
        super(config);
    }
    
    public BiaoZhuModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"BIAOZHUDIAN\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: ID
                "\"NAME\" TEXT," + // 1: Name
                "\"LONGITUDE\" REAL NOT NULL ," + // 2: Longitude
                "\"LATITUDE\" REAL NOT NULL ," + // 3: Latitude
                "\"DES\" TEXT," + // 4: Des
                "\"PIC_ADDRESS\" TEXT," + // 5: PicAddress
                "\"VIDEO_ADDRESS\" TEXT," + // 6: VideoAddress
                "\"AUDIO_ADDRESS\" TEXT," + // 7: AudioAddress
                "\"BZMTYPE\" TEXT," + // 8: BZMType
                "\"CREATOR_ID\" TEXT," + // 9: CreatorId
                "\"EVENT_HEAD_ID\" TEXT," + // 10: EventHeadId
                "\"CREATOR_NAME\" TEXT," + // 11: CreatorName
                "\"CREATE_TIME\" TEXT," + // 12: CreateTime
                "\"MISSION_CASE\" TEXT," + // 13: MissionCase
                "\"IS_UPLOAD\" INTEGER NOT NULL );"); // 14: IsUpload
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"BIAOZHUDIAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, BiaoZhuModel entity) {
        stmt.clearBindings();
 
        String ID = entity.getID();
        if (ID != null) {
            stmt.bindString(1, ID);
        }
 
        String Name = entity.getName();
        if (Name != null) {
            stmt.bindString(2, Name);
        }
        stmt.bindDouble(3, entity.getLongitude());
        stmt.bindDouble(4, entity.getLatitude());
 
        String Des = entity.getDes();
        if (Des != null) {
            stmt.bindString(5, Des);
        }
 
        String PicAddress = entity.getPicAddress();
        if (PicAddress != null) {
            stmt.bindString(6, PicAddress);
        }
 
        String VideoAddress = entity.getVideoAddress();
        if (VideoAddress != null) {
            stmt.bindString(7, VideoAddress);
        }
 
        String AudioAddress = entity.getAudioAddress();
        if (AudioAddress != null) {
            stmt.bindString(8, AudioAddress);
        }
 
        String BZMType = entity.getBZMType();
        if (BZMType != null) {
            stmt.bindString(9, BZMType);
        }
 
        String CreatorId = entity.getCreatorId();
        if (CreatorId != null) {
            stmt.bindString(10, CreatorId);
        }
 
        String EventHeadId = entity.getEventHeadId();
        if (EventHeadId != null) {
            stmt.bindString(11, EventHeadId);
        }
 
        String CreatorName = entity.getCreatorName();
        if (CreatorName != null) {
            stmt.bindString(12, CreatorName);
        }
 
        String CreateTime = entity.getCreateTime();
        if (CreateTime != null) {
            stmt.bindString(13, CreateTime);
        }
 
        String MissionCase = entity.getMissionCase();
        if (MissionCase != null) {
            stmt.bindString(14, MissionCase);
        }
        stmt.bindLong(15, entity.getIsUpload());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, BiaoZhuModel entity) {
        stmt.clearBindings();
 
        String ID = entity.getID();
        if (ID != null) {
            stmt.bindString(1, ID);
        }
 
        String Name = entity.getName();
        if (Name != null) {
            stmt.bindString(2, Name);
        }
        stmt.bindDouble(3, entity.getLongitude());
        stmt.bindDouble(4, entity.getLatitude());
 
        String Des = entity.getDes();
        if (Des != null) {
            stmt.bindString(5, Des);
        }
 
        String PicAddress = entity.getPicAddress();
        if (PicAddress != null) {
            stmt.bindString(6, PicAddress);
        }
 
        String VideoAddress = entity.getVideoAddress();
        if (VideoAddress != null) {
            stmt.bindString(7, VideoAddress);
        }
 
        String AudioAddress = entity.getAudioAddress();
        if (AudioAddress != null) {
            stmt.bindString(8, AudioAddress);
        }
 
        String BZMType = entity.getBZMType();
        if (BZMType != null) {
            stmt.bindString(9, BZMType);
        }
 
        String CreatorId = entity.getCreatorId();
        if (CreatorId != null) {
            stmt.bindString(10, CreatorId);
        }
 
        String EventHeadId = entity.getEventHeadId();
        if (EventHeadId != null) {
            stmt.bindString(11, EventHeadId);
        }
 
        String CreatorName = entity.getCreatorName();
        if (CreatorName != null) {
            stmt.bindString(12, CreatorName);
        }
 
        String CreateTime = entity.getCreateTime();
        if (CreateTime != null) {
            stmt.bindString(13, CreateTime);
        }
 
        String MissionCase = entity.getMissionCase();
        if (MissionCase != null) {
            stmt.bindString(14, MissionCase);
        }
        stmt.bindLong(15, entity.getIsUpload());
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public BiaoZhuModel readEntity(Cursor cursor, int offset) {
        BiaoZhuModel entity = new BiaoZhuModel( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // ID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // Name
            cursor.getDouble(offset + 2), // Longitude
            cursor.getDouble(offset + 3), // Latitude
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // Des
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // PicAddress
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // VideoAddress
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // AudioAddress
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // BZMType
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // CreatorId
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // EventHeadId
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // CreatorName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // CreateTime
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // MissionCase
            cursor.getInt(offset + 14) // IsUpload
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, BiaoZhuModel entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setLongitude(cursor.getDouble(offset + 2));
        entity.setLatitude(cursor.getDouble(offset + 3));
        entity.setDes(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPicAddress(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setVideoAddress(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAudioAddress(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setBZMType(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCreatorId(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setEventHeadId(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCreatorName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCreateTime(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setMissionCase(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setIsUpload(cursor.getInt(offset + 14));
     }
    
    @Override
    protected final String updateKeyAfterInsert(BiaoZhuModel entity, long rowId) {
        return entity.getID();
    }
    
    @Override
    public String getKey(BiaoZhuModel entity) {
        if(entity != null) {
            return entity.getID();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(BiaoZhuModel entity) {
        return entity.getID() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
